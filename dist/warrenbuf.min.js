function WarrenBuf(e,t={}){this.version="2.2.6-alpha.1";const{treeSitterParser:n=null,treeSitterQuery:o=null,initialViewportSize:i=20,lineHeight:s=24,editorPaddingPX:r=4,indentation:l=4,colorPrimary:c="#B2B2B2",colorSecondary:h="#212026",gutterSize:a=2,gutterPadding:d=1}=t;let u=a;const w=e.querySelector(".wb-lines");Object.assign(w.style,{lineHeight:s+"px",fontSize:s+"px",position:"relative",margin:r+"px"});const g=e.querySelector(".wb-status");Object.assign(g.style,{padding:"6px",background:h,color:c});const p=e.querySelector(".wb-coordinate"),f=e.querySelector(".wb-linecount"),m=e.querySelector(".wb-indentation"),y=e.querySelector(".wb-clipboard-bridge"),k=e.querySelector(".wb-gutter");Object.assign(k.style,{fontSize:s+"px",lineHeight:s+"px",textAlign:"right",paddingTop:r+"px",paddingRight:2*r+"px",backgroundColor:h,color:c,width:u+d+"ch"});const C=[],S=document.createDocumentFragment(),x=document.createDocumentFragment(),v=document.createDocumentFragment(),b={row:0,col:0};let L={row:0,col:0},M=L,$=L.col;const T={get ordered(){return this.isForwardSelection?[M,L]:[L,M]},moveRow(e){e>0?L.row<A.end-A.start?(L.row++,A.lines[L.row].length>=M.col?L.col=Math.min($,Math.max(0,A.lines[L.row].length)):L.col=Math.min(M.col,Math.max(0,A.lines[L.row].length))):A.end!==z.lastIndex&&(A.scroll(1),L.col=Math.min(M.col,Math.max(0,A.lines[L.row].length))):0===L.row?(A.scroll(-1),L.col=Math.min(L.col,Math.max(0,A.lines[L.row].length))):(L.row--,A.lines[L.row].length>=L.col?L.col=Math.min($,Math.max(0,A.lines[L.row].length)):L.col=Math.min(L.col,Math.max(0,A.lines[L.row].length))),F(!0)},moveCol(e){1===e?L.col<A.lines[L.row].length-(this.isSelection?1:0)?$=++L.col:L.row<A.end-A.start?($=L.col=0,L.row++):A.end<z.lastIndex&&(L.col=0,A.scroll(1)):-1===e?L.col>0?$=--L.col:L.row>0?(L.row--,$=L.col=Math.max(0,A.lines[L.row].length-(this.isSelection?1:0))):0!==A.start&&(A.scroll(-1),L.col=Math.max(0,A.lines[L.row].length-1)):console.warning(`Do not support moving by multiple values (${e}) yet `),F()},get isSelection(){return L!==M},get isForwardSelection(){return M.row===L.row&&M.col<L.col||M.row<L.row},iosSetCursorAndRender({row:e,col:t}){const n=z.lastIndex-A.start,o=Math.min(A.size-1,n);e=Math.min(e,o);let i=z.lines[A.start+e].length;this.setCursor({row:e,col:Math.min(t,i)}),F(!0)},setCursor({row:e,col:t}){L.row=e,L.col=t,this.makeCursor()},get lines(){const[e,t]=this.ordered;if(e.row===t.row)return[z.lines[A.start+e.row].slice(e.col,t.col+1)];{const n=z.lines[A.start+e.row].slice(e.col),o=z.lines[A.start+t.row].slice(0,t.col+1);return[n,...z.lines.slice(A.start+e.row+1,A.start+t.row),o]}},makeCursor(){M.row=L.row,M.col=L.col,L=M},makeSelection(){L=b,L.row=M.row,L.col=M.col},moveCursorStartOfLine(){const e=L.row,t=A.start+e;let n=0;const o=z.lines[t];for(let e=0;e<o.length;e++)if(" "!==o.charAt(e)){n=e;break}$=L.col=n<M.col?n:0,F(!0)},moveCursorEndOfLine(){const e=L.row,t=A.start+e;$=L.col=z.lines[t].length,F(!0)},insertLines(e){if(1===e.length)return this.insert(e[0]);const[t,n]=this.ordered,{index:o,left:i,_:s}=this.partitionLine(t),{index:r,right:l,rightExclusive:c}=this.partitionLine(n);z.lines[o]=i+e[0],z.lines.splice(o+1,r-o-1,...e.slice(1,-1)),z.lines[o+e.length-1]=e[e.length-1]+(this.isSelection?c:l),this.setCursor({row:o+e.length-1,col:e[e.length-1].length}),F(!0)},insert(e){const t=performance.now();if(this.isSelection){const[t,n]=this.ordered,{index:o,left:i}=this.partitionLine(t),s=this.partitionLine({row:n.row,col:n.col+1}),{right:r}=s;z.splice(o,[i+e+r],n.row-t.row+1),L.row=t.row,L.col=t.col+e.length,this.makeCursor()}else{const{index:t,left:n,right:o}=this.partitionLine(M);z.lines[t]=n+e+o,$=L.col+=e.length}F(!0);const n=performance.now(),o=parseFloat(n-t);console.log(`Took ${o.toFixed(2)} millis to insert with ${z.lines.length} lines. That's ${1e3/o} FPS.`)},delete(){if(this.isSelection)return this.insert("");const e=performance.now();let t="character";const{index:n,left:o,right:i}=this.partitionLine(M);M.col>0?(z.lines[n]=o.slice(0,o.length-1)+i,L.col--):M.row>0&&(L.col=z.lines[n-1].length,L.row--,z.lines[n-1]+=z.lines[n],z.delete(n),t="line"),F(!0);const s=performance.now(),r=parseFloat(s-e);console.log(`Took ${r.toFixed(2)} millis to delete ${t} with ${z.lines.length} lines. That's ${1e3/r} FPS.`)},newLine(){this.isSelection&&T.insert("");const e=performance.now(),{index:t,left:n,right:o}=this.partitionLine(M);z.lines[t]=n,z.splice(t+1,[o]),L.col=0,M.row<A.size-1?L.row++:A.scroll(1),F(!0);const i=performance.now(),s=parseFloat(i-e);console.log(`Took ${s.toFixed(2)} millis to insert new line with ${z.lines.length} lines. That's ${1e3/s} FPS.`)},moveBackWord(){const e=z.lines[L.row];e.length;if(0===L.col)L.row>0&&(L.row--,L.col=A.lines[L.row].length);else{const t=e=>/\s/.test(e),n=e=>/[\p{L}\p{Nd}_]/u.test(e);let o=L.col;if(t(e[o])){for(;o>0&&t(e[o]);)o--;for(;o>0&&n(e[o]);)o--}else if(n(e[o]))for(;o>0&&n(e[o]);)o--;else{const t=e[o];for(o--;o>0&&e[o]===t;)o--}L.col=o}F(!0)},moveWord(){const e=z.lines[L.row],t=e.length;if(L.col===t)L.col=0,L.row++;else{const n=e=>/\s/.test(e),o=e=>/[\p{L}\p{Nd}_]/u.test(e);let i=L.col;if(n(e[i])){for(;i<t&&n(e[i]);)i++;for(;i<t&&o(e[i]);)i++}else if(o(e[i]))for(;i<t&&o(e[i]);)i++;else{const n=e[i];for(i++;i<t&&e[i]===n;)i++}L.col=i}F(!0)},indent(){if(!this.isSelection)return;const[e,t]=this.ordered;for(let n=e.row;n<=t.row;n++){const e=A.start+n;console.log("Before: "+z.lines[e]),z.lines[e]=" ".repeat(l)+z.lines[e],console.log("After: "+z.lines[e])}e.col+=l,t.col+=l,F(!0)},unindent(){const[e,t]=this.ordered;for(let n=e.row;n<=t.row;n++)if(n===e.row||n===t.row){const o=n===e.row?e:t;let i=0,s=0;const r=A.lines[o.row];let c=o.col;for(;c<r.length&&" "===r.charAt(c);)c++;for(s=c-o.col,c=0;c<o.col&&" "===r.charAt(c);)c++;i=c;const h=Math.min(l,i+s);z.lines[A.start+o.row]=z.lines[o.row].slice(h),s<h&&(o.col-=h-s)}else{const e=A.start+n,t=z.lines[e];let o=0;for(let e=0;e<Math.min(l,t.length)&&" "===t.charAt(0);e++)o++;z.lines[e]=t.slice(o)}F(!0)},partitionLine({row:e,col:t}){const n=A.start+e,o=z.lines[n];return{index:n,left:o.slice(0,t),right:o.slice(t),rightExclusive:o.slice(t+1)}}},z={lines:[""],chunks:[],chunkSize:5e4,buffer:[],totalLines:0,useChunkedMode:!1,byteCount:"",originalLineCount:0,treeSitterTree:null,treeSitterCaptures:[],chunkCache:new Map,get lastIndex(){return this.useChunkedMode?this.totalLines-1:this.lines.length-1},set text(e){this.lines=e.split("\n"),this.byteCount=(new TextEncoder).encode(e).length,this.originalLineCount=this.lines.length,n&&o&&(this.treeSitterTree=n.parse(e),this.treeSitterCaptures=o.captures(this.treeSitterTree.rootNode)),F(!0)},splice(e,t,n=0){this.lines.splice(e,n,...t),F()},delete(e){this.lines.splice(e,1)},async appendLines(e,t=!1){if(this.useChunkedMode)for(this.buffer.push(...e),this.totalLines+=e.length;this.buffer.length>=this.chunkSize;){const e=this.buffer.splice(0,this.chunkSize),t=await this._compressChunk(e);this.chunks.push(t)}else this.lines.push(...e);t||F()},async _compressChunk(e){const t=e.join("\n"),n=(new TextEncoder).encode(t),o=[],i=new ReadableStream({start(e){e.enqueue(n),e.close()}}).pipeThrough(new CompressionStream("gzip")).getReader();for(;;){const{done:e,value:t}=await i.read();if(e)break;o.push(t)}const s=o.reduce((e,t)=>e+t.length,0),r=new Uint8Array(s);let l=0;for(const e of o)r.set(e,l),l+=e.length;return r},async _decompressChunk(e){const t=[],n=new ReadableStream({start(t){t.enqueue(e),t.close()}}).pipeThrough(new DecompressionStream("gzip")).getReader();for(;;){const{done:e,value:o}=await n.read();if(e)break;t.push(o)}return(new TextDecoder).decode(new Uint8Array(t.reduce((e,t)=>[...e,...t],[]))).split("\n")}},A={start:0,size:i,decompressingChunks:new Set,get end(){return Math.min(this.start+this.size-1,z.lastIndex)},scroll(e){const t=performance.now();this.start+=e,this.start=$clamp(this.start,0,z.lastIndex),F();const n=performance.now(),o=parseFloat(n-t),i=z.useChunkedMode?z.totalLines:z.lines.length;console.log(`Took ${o.toFixed(2)} millis to scroll viewport with ${i} lines. That's ${1e3/o} FPS.`)},set(e,t){this.start=$clamp(e-1,0,z.lastIndex),this.size!==t?(this.size=t,F(!0)):F()},get lines(){if(z.useChunkedMode){const e=[],t=z.chunks.length*z.chunkSize;for(let n=this.start;n<=this.end;n++)if(n<t){const t=Math.floor(n/z.chunkSize),o=n%z.chunkSize;if(z.chunkCache.has(t)){const n=z.chunkCache.get(t);e.push(n[o]||"")}else this.decompressingChunks.has(t)||(this.decompressingChunks.add(t),z._decompressChunk(z.chunks[t]).then(e=>{if(z.chunkCache.set(t,e),this.decompressingChunks.delete(t),z.chunkCache.size>5){const e=z.chunkCache.keys().next().value;z.chunkCache.delete(e)}F()})),e.push("...")}else e.push(z.buffer[n-t]||"");return e}return z.lines.slice(this.start,this.end+1)}},D={lineCount:-1};function F(e=!1){D.lineCount!==z.lastIndex+1&&(f.textContent=`${D.lineCount=z.lastIndex+1}L, originally: ${z.originalLineCount}L ${z.byteCount} bytes`);const t=A.end.toString().length;t>u&&(u=t,k.style.width=u+d+"ch"),k.textContent=null;for(let e=0;e<A.size;e++){const t=document.createElement("div");t.textContent=A.start+e+1,v.appendChild(t)}if(k.appendChild(v),e){w.textContent=null;for(let e=0;e<A.size;e++)S.appendChild(document.createElement("pre"));for(w.appendChild(S);C.length>0;)C.pop().remove();!function(){for(let e=0;e<A.size;e++){const t=document.createElement("div");t.className="wb-selection",Object.assign(t.style,{display:"block",visibility:"hidden",width:"1ch",height:s+"px",fontSize:s+"px",top:e*s+"px"}),C[e]=x.appendChild(t)}w.appendChild(x)}()}for(let e=0;e<A.size;e++)w.children[e].textContent=A.lines[e]||null;if(z.treeSitterTree&&z.treeSitterCaptures){const e=z.lines.join("\n");z.treeSitterTree=n.parse(e),z.treeSitterCaptures=o.captures(z.treeSitterTree.rootNode);let t=0;for(let e=0;e<A.size;e++){w.children[e].innerHTML="",w.children[e].textContent=A.lines[e]||null;for(let n=t;n<z.treeSitterCaptures.length;n++){const o=z.treeSitterCaptures[n],i=o.node.startPosition;if(i.row===A.start+e){const s=i.column,r=s+o.node.text.length,l=w.children[e].textContent,c=l.slice(0,s),h=l.slice(r);if("function"===o.name){if(c.length>8){const t=c.slice(0,c.length-9),n=c.slice(c.length-9);w.children[e].innerHTML=`${t}<span class="highlight-function">${n}</span><span class="highlight-function-name">${o.node.text}</span>${h}`}}else"string"===o.name&&(w.children[e].innerHTML=`${c}<span class="highlight-string">${o.node.text}</span>${h}`);t=n;break}}}}for(let e=0;e<C.length;e++)C[e].style.visibility="hidden";const[i,r]=T.ordered;for(let e=i.row+1;e<=r.row-1;e++)if(C[e].style.visibility="visible",C[e].style.left=0,e<A.lines.length){const t=A.lines[e];t.length>0?C[e].style.width=t.length+"ch":C[e].style.width="1ch"}if(C[i.row].style.left=i.col+"ch",r.row===i.row)C[i.row].style.width=r.col-i.col+1+"ch",C[i.row].style.visibility="visible";else{if(i.row<A.lines.length){const e=A.lines[i.row];C[i.row].style.width=Math.max(1,e.length-i.col)+"ch",C[i.row].style.visibility="visible"}if(r.row<A.lines.length){const e=A.lines[r.row];r.col>=e.length&&console.warn(`secondEdge's column ${r.col} is too far beyond the text with length: `,e.length),C[r.row].style.width=Math.min(r.col+1,e.length)+"ch",C[r.row].style.visibility="visible"}}return m.innerHTML=`Spaces: ${l}`,p.innerHTML=`Ln ${A.start+L.row+1}, Col ${M.col+1}`,this}this.Viewport=A,this.Model=z,this.Selection=T,F(!0),e.addEventListener("paste",e=>{e.preventDefault();const t=e.clipboardData.getData("text/plain");t&&T.insertLines(t.split("\n"))}),e.addEventListener("copy",e=>{e.preventDefault(),e.clipboardData.setData("text/plain",T.lines.join("\n"))}),e.addEventListener("keydown",e=>{if(!e.metaKey&&!e.ctrlKey||"v"!==e.key.toLowerCase())return(e.metaKey||e.ctrlKey)&&"c"===e.key.toLowerCase()?(y.focus({preventScroll:!0}),void y.select()):void(e.key.startsWith("Arrow")?(e.preventDefault(),e.metaKey?(!e.shiftKey&&T.isSelection&&T.makeCursor(),e.shiftKey&&!T.isSelection&&T.makeSelection(),"ArrowLeft"===e.key?T.moveCursorStartOfLine():"ArrowRight"===e.key&&T.moveCursorEndOfLine()):e.altKey?(!e.shiftKey&&T.isSelection&&T.makeCursor(),e.shiftKey&&!T.isSelection&&T.makeSelection(),"ArrowLeft"===e.key?T.moveBackWord():"ArrowRight"===e.key&&T.moveWord()):!e.shiftKey&&T.isSelection?"ArrowLeft"===e.key?(T.setCursor(T.ordered[0]),F(!0)):"ArrowRight"===e.key?(T.setCursor(T.ordered[1]),F(!0)):"ArrowUp"===e.key?(T.setCursor(T.ordered[0]),T.moveRow(-1)):"ArrowDown"===e.key&&(T.setCursor(T.ordered[1]),T.moveRow(1)):(e.shiftKey&&!T.isSelection&&T.makeSelection(),"ArrowDown"===e.key?T.moveRow(1):"ArrowUp"===e.key?T.moveRow(-1):"ArrowLeft"===e.key?T.moveCol(-1):"ArrowRight"===e.key&&T.moveCol(1))):"Backspace"===e.key?T.delete():"Enter"===e.key?T.newLine():"Escape"===e.key||("Tab"===e.key?(e.preventDefault(),T.isSelection?e.shiftKey?T.unindent():T.indent():e.shiftKey?T.unindent():T.insert(" ".repeat(l))):e.key.length>1?console.warn("Ignoring unknown key: ",e.code,e.key):"Shift"===e.key||(" "===e.key?(e.preventDefault(),T.insert(" ")):T.insert(e.key))))})}function $clamp(e,t,n){return e<t?(console.warn("Out of bounds"),t):e>n?(console.warn("Out of bounds"),n):e}