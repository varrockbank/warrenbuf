function WarrenBuf(e,t={}){this.version="2.2.6-alpha.1";const{treeSitterParser:n=null,treeSitterQuery:o=null,initialViewportSize:s=20,lineHeight:i=24,editorPaddingPX:r=4,indentation:l=4,colorPrimary:c="#B2B2B2",colorSecondary:h="#212026",gutterSize:a=2,gutterPadding:u=1}=t;let d=a;const w=e.querySelector(".wb-lines");Object.assign(w.style,{lineHeight:i+"px",fontSize:i+"px",position:"relative",margin:r+"px"});const g=e.querySelector(".wb-status");Object.assign(g.style,{padding:"6px",background:h,color:c});const f=e.querySelector(".wb-coordinate"),p=e.querySelector(".wb-linecount"),m=e.querySelector(".wb-indentation"),k=e.querySelector(".wb-clipboard-bridge"),y=e.querySelector(".wb-gutter");Object.assign(y.style,{fontSize:i+"px",lineHeight:i+"px",textAlign:"right",paddingTop:r+"px",paddingRight:2*r+"px",backgroundColor:h,color:c,width:d+u+"ch"});const C=[],x=document.createDocumentFragment(),S=document.createDocumentFragment(),v=document.createDocumentFragment(),b={row:0,col:0};let L={row:0,col:0},$=L,M=L.col;const z={get ordered(){return this.isForwardSelection?[$,L]:[L,$]},moveRow(e){e>0?L.row<A.end-A.start?(L.row++,A.lines[L.row].length>=$.col?L.col=Math.min(M,Math.max(0,A.lines[L.row].length)):L.col=Math.min($.col,Math.max(0,A.lines[L.row].length))):A.end!==T.lastIndex&&(A.scroll(1),L.col=Math.min($.col,Math.max(0,A.lines[L.row].length))):0===L.row?(A.scroll(-1),L.col=Math.min(L.col,Math.max(0,A.lines[L.row].length))):(L.row--,A.lines[L.row].length>=L.col?L.col=Math.min(M,Math.max(0,A.lines[L.row].length)):L.col=Math.min(L.col,Math.max(0,A.lines[L.row].length))),D(!0)},moveCol(e){1===e?L.col<A.lines[L.row].length-(this.isSelection?1:0)?M=++L.col:L.row<A.end-A.start?(M=L.col=0,L.row++):A.end<T.lastIndex&&(L.col=0,A.scroll(1)):-1===e?L.col>0?M=--L.col:L.row>0?(L.row--,M=L.col=Math.max(0,A.lines[L.row].length-(this.isSelection?1:0))):0!==A.start&&(A.scroll(-1),L.col=Math.max(0,A.lines[L.row].length-1)):console.warning(`Do not support moving by multiple values (${e}) yet `),D()},get isSelection(){return L!==$},get isForwardSelection(){return $.row===L.row&&$.col<L.col||$.row<L.row},iosSetCursorAndRender({row:e,col:t}){const n=T.lastIndex-A.start,o=Math.min(A.size-1,n);e=Math.min(e,o);let s=T.lines[A.start+e].length;this.setCursor({row:e,col:Math.min(t,s)}),D(!0)},setCursor({row:e,col:t}){L.row=e,L.col=t,this.makeCursor()},get lines(){const[e,t]=this.ordered;if(e.row===t.row)return[T.lines[A.start+e.row].slice(e.col,t.col+1)];{const n=T.lines[A.start+e.row].slice(e.col),o=T.lines[A.start+t.row].slice(0,t.col+1);return[n,...T.lines.slice(A.start+e.row+1,A.start+t.row),o]}},makeCursor(){$.row=L.row,$.col=L.col,L=$},makeSelection(){L=b,L.row=$.row,L.col=$.col},moveCursorStartOfLine(){const e=L.row,t=A.start+e;let n=0;const o=T.lines[t];for(let e=0;e<o.length;e++)if(" "!==o.charAt(e)){n=e;break}M=L.col=n<$.col?n:0,D(!0)},moveCursorEndOfLine(){const e=L.row,t=A.start+e;M=L.col=T.lines[t].length,D(!0)},insertLines(e){if(1===e.length)return this.insert(e[0]);const[t,n]=this.ordered,{index:o,left:s,_:i}=this.partitionLine(t),{index:r,right:l,rightExclusive:c}=this.partitionLine(n);T.lines[o]=s+e[0],T.lines.splice(o+1,r-o-1,...e.slice(1,-1)),T.lines[o+e.length-1]=e[e.length-1]+(this.isSelection?c:l),this.setCursor({row:o+e.length-1,col:e[e.length-1].length}),D(!0)},insert(e){const t=performance.now();if(this.isSelection){const[t,n]=this.ordered,{index:o,left:s}=this.partitionLine(t),i=this.partitionLine({row:n.row,col:n.col+1}),{right:r}=i;T.splice(o,[s+e+r],n.row-t.row+1),L.row=t.row,L.col=t.col+e.length,this.makeCursor()}else{const{index:t,left:n,right:o}=this.partitionLine($);T.lines[t]=n+e+o,M=L.col+=e.length}D(!0);const n=performance.now(),o=parseFloat(n-t);console.log(`Took ${o.toFixed(2)} millis to insert with ${T.lines.length} lines. That's ${1e3/o} FPS.`)},delete(){if(this.isSelection)return this.insert("");const e=performance.now();let t="character";const{index:n,left:o,right:s}=this.partitionLine($);$.col>0?(T.lines[n]=o.slice(0,o.length-1)+s,L.col--):$.row>0&&(L.col=T.lines[n-1].length,L.row--,T.lines[n-1]+=T.lines[n],T.delete(n),t="line"),D(!0);const i=performance.now(),r=parseFloat(i-e);console.log(`Took ${r.toFixed(2)} millis to delete ${t} with ${T.lines.length} lines. That's ${1e3/r} FPS.`)},newLine(){this.isSelection&&z.insert("");const e=performance.now(),{index:t,left:n,right:o}=this.partitionLine($);T.lines[t]=n,T.splice(t+1,[o]),L.col=0,$.row<A.size-1?L.row++:A.scroll(1),D(!0);const s=performance.now(),i=parseFloat(s-e);console.log(`Took ${i.toFixed(2)} millis to insert new line with ${T.lines.length} lines. That's ${1e3/i} FPS.`)},moveBackWord(){const e=T.lines[L.row];e.length;if(0===L.col)L.row>0&&(L.row--,L.col=A.lines[L.row].length);else{const t=e=>/\s/.test(e),n=e=>/[\p{L}\p{Nd}_]/u.test(e);let o=L.col;if(t(e[o])){for(;o>0&&t(e[o]);)o--;for(;o>0&&n(e[o]);)o--}else if(n(e[o]))for(;o>0&&n(e[o]);)o--;else{const t=e[o];for(o--;o>0&&e[o]===t;)o--}L.col=o}D(!0)},moveWord(){const e=T.lines[L.row],t=e.length;if(L.col===t)L.col=0,L.row++;else{const n=e=>/\s/.test(e),o=e=>/[\p{L}\p{Nd}_]/u.test(e);let s=L.col;if(n(e[s])){for(;s<t&&n(e[s]);)s++;for(;s<t&&o(e[s]);)s++}else if(o(e[s]))for(;s<t&&o(e[s]);)s++;else{const n=e[s];for(s++;s<t&&e[s]===n;)s++}L.col=s}D(!0)},indent(){if(!this.isSelection)return;const[e,t]=this.ordered;for(let n=e.row;n<=t.row;n++){const e=A.start+n;console.log("Before: "+T.lines[e]),T.lines[e]=" ".repeat(l)+T.lines[e],console.log("After: "+T.lines[e])}e.col+=l,t.col+=l,D(!0)},unindent(){const[e,t]=this.ordered;for(let n=e.row;n<=t.row;n++)if(n===e.row||n===t.row){const o=n===e.row?e:t;let s=0,i=0;const r=A.lines[o.row];let c=o.col;for(;c<r.length&&" "===r.charAt(c);)c++;for(i=c-o.col,c=0;c<o.col&&" "===r.charAt(c);)c++;s=c;const h=Math.min(l,s+i);T.lines[A.start+o.row]=T.lines[o.row].slice(h),i<h&&(o.col-=h-i)}else{const e=A.start+n,t=T.lines[e];let o=0;for(let e=0;e<Math.min(l,t.length)&&" "===t.charAt(0);e++)o++;T.lines[e]=t.slice(o)}D(!0)},partitionLine({row:e,col:t}){const n=A.start+e,o=T.lines[n];return{index:n,left:o.slice(0,t),right:o.slice(t),rightExclusive:o.slice(t+1)}}},T={lines:[""],byteCount:"",originalLineCount:0,treeSitterTree:null,treeSitterCaptures:[],useChunkedMode:!1,chunks:[],chunkSize:5e4,totalLines:0,buffer:[],currentChunkIndex:-1,prevBuffer:[],nextBuffer:[],_textEncoder:new TextEncoder,_textDecoder:new TextDecoder,activateChunkMode(e=5e4){this.useChunkedMode=!0,this.chunks=[],this.buffer=[],this.totalLines=0,this.lines=[],this.currentChunkIndex=-1,this.prevBuffer=[],this.nextBuffer=[],this.chunkSize=e},get lastIndex(){return this.useChunkedMode?this.totalLines-1:this.lines.length-1},set text(e){this.lines=e.split("\n"),this.byteCount=(new TextEncoder).encode(e).length,this.originalLineCount=this.lines.length,n&&o&&(this.treeSitterTree=n.parse(e),this.treeSitterCaptures=o.captures(this.treeSitterTree.rootNode)),D(!0)},splice(e,t,n=0){this.lines.splice(e,n,...t),D()},delete(e){this.lines.splice(e,1)},async appendLines(e,t=!1){if(this.useChunkedMode){let t=Math.floor(this.totalLines/this.chunkSize),n=this.totalLines%this.chunkSize,o=e;if(t==this.currentChunkIndex){const s=this.chunkSize-this.buffer.length,i=e.slice(0,s);o=e.slice(s),this.buffer.push(i),this.totalLines+=s,t++,n=0}for(;0!=o.length;){let e=this.chunkSize-n;if(o.length<=e){let e=[];t<this.chunks.length&&(e=await this._decompressChunk(t)),e.push(...o),this.totalLines+=o.length,await this._compressChunk(t,e),o=[]}else{const s=o.slice(0,e);o=o.slice(e);let i=[];t<this.chunks.length&&(i=await this._decompressChunk(t)),i.push(...s),this.totalLines+=s.length,await this._compressChunk(t,i),t++,n=0}}}else this.lines.push(...e);t||D()},async _compressChunk(e,t){console.log(`[Compress] Compressing chunk ${e} (${t.length} lines)`);const n=t.join("\n"),o=this._textEncoder.encode(n),s=[],i=new ReadableStream({start(e){e.enqueue(o),e.close()}}).pipeThrough(new CompressionStream("gzip")).getReader();for(;;){const{done:e,value:t}=await i.read();if(e)break;s.push(t)}const r=s.reduce((e,t)=>e+t.length,0),l=new Uint8Array(r);let c=0;for(const e of s)l.set(e,c),c+=e.length;e<this.chunks.length?this.chunks[e]=l:this.chunks.push(l),console.log(`[Compress] Chunk ${e} compressed: ${(l.length/1024).toFixed(2)} KB`)},async _decompressChunk(e){console.log(`[Decompress] Decompressing chunk ${e}`);const t=this.chunks[e],n=[],o=new ReadableStream({start(e){e.enqueue(t),e.close()}}).pipeThrough(new DecompressionStream("gzip")).getReader();for(;;){const{done:e,value:t}=await o.read();if(e)break;n.push(t)}const s=n.reduce((e,t)=>e+t.length,0),i=new Uint8Array(s);let r=0;for(const e of n)i.set(e,r),r+=e.length;const l=this._textDecoder.decode(i).split("\n");return console.log(`[Decompress] Chunk ${e} decompressed: ${l.length} lines`),l}},A={start:0,size:s,get end(){return Math.min(this.start+this.size-1,T.lastIndex)},scroll(e){const t=performance.now();this.start+=e,this.start=$clamp(this.start,0,T.lastIndex),D();const n=performance.now(),o=parseFloat(n-t),s=T.useChunkedMode?T.totalLines:T.lines.length;console.log(`Took ${o.toFixed(2)} millis to scroll viewport with ${s} lines. That's ${1e3/o} FPS.`)},set(e,t){this.start=$clamp(e-1,0,T.lastIndex),this.size!==t?(this.size=t,D(!0)):D()},get lines(){if(T.useChunkedMode){const e=Math.floor(this.start/T.chunkSize);Math.floor(this.end/T.chunkSize);if(T.currentChunkIndex!==e){return(async()=>{const t=e-1,n=e+1;console.log("[Buffer] Loading 3-chunk window:"),console.log(`  - Prev: ${t>=0&&t<T.chunks.length?t:"none"}`),console.log(`  - Current: ${e}`),console.log(`  - Next: ${n<T.chunks.length?n:"none"}`),T.currentChunkIndex=e,T.buffer=await T._decompressChunk(e),t>=0&&t<T.chunks.length?T.prevBuffer=await T._decompressChunk(t):T.prevBuffer=[],n<T.chunks.length?T.nextBuffer=await T._decompressChunk(n):T.nextBuffer=[],console.log("[Buffer] 3-chunk window loaded successfully"),D()})(),Array(this.size).fill("...")}const t=[];for(let n=this.start;n<=this.end;n++){const o=Math.floor(n/T.chunkSize),s=n%T.chunkSize;o===e-1&&T.prevBuffer.length>0?t.push(T.prevBuffer[s]||""):o===e?t.push(T.buffer[s]||""):o===e+1&&T.nextBuffer.length>0?t.push(T.nextBuffer[s]||""):t.push("")}return t}return T.lines.slice(this.start,this.end+1)}},B={lineCount:-1};function D(e=!1){B.lineCount!==T.lastIndex+1&&(p.textContent=`${B.lineCount=T.lastIndex+1}L, originally: ${T.originalLineCount}L ${T.byteCount} bytes`);const t=A.end.toString().length;t>d&&(d=t,y.style.width=d+u+"ch"),y.textContent=null;for(let e=0;e<A.size;e++){const t=document.createElement("div");t.textContent=A.start+e+1,v.appendChild(t)}if(y.appendChild(v),e){w.textContent=null;for(let e=0;e<A.size;e++)x.appendChild(document.createElement("pre"));for(w.appendChild(x);C.length>0;)C.pop().remove();!function(){for(let e=0;e<A.size;e++){const t=document.createElement("div");t.className="wb-selection",Object.assign(t.style,{display:"block",visibility:"hidden",width:"1ch",height:i+"px",fontSize:i+"px",top:e*i+"px"}),C[e]=S.appendChild(t)}w.appendChild(S)}()}for(let e=0;e<A.size;e++)w.children[e].textContent=A.lines[e]||null;if(T.treeSitterTree&&T.treeSitterCaptures){const e=T.lines.join("\n");T.treeSitterTree=n.parse(e),T.treeSitterCaptures=o.captures(T.treeSitterTree.rootNode);let t=0;for(let e=0;e<A.size;e++){w.children[e].innerHTML="",w.children[e].textContent=A.lines[e]||null;for(let n=t;n<T.treeSitterCaptures.length;n++){const o=T.treeSitterCaptures[n],s=o.node.startPosition;if(s.row===A.start+e){const i=s.column,r=i+o.node.text.length,l=w.children[e].textContent,c=l.slice(0,i),h=l.slice(r);if("function"===o.name){if(c.length>8){const t=c.slice(0,c.length-9),n=c.slice(c.length-9);w.children[e].innerHTML=`${t}<span class="highlight-function">${n}</span><span class="highlight-function-name">${o.node.text}</span>${h}`}}else"string"===o.name&&(w.children[e].innerHTML=`${c}<span class="highlight-string">${o.node.text}</span>${h}`);t=n;break}}}}for(let e=0;e<C.length;e++)C[e].style.visibility="hidden";const[s,r]=z.ordered;for(let e=s.row+1;e<=r.row-1;e++)if(C[e].style.visibility="visible",C[e].style.left=0,e<A.lines.length){const t=A.lines[e];t.length>0?C[e].style.width=t.length+"ch":C[e].style.width="1ch"}if(C[s.row].style.left=s.col+"ch",r.row===s.row)C[s.row].style.width=r.col-s.col+1+"ch",C[s.row].style.visibility="visible";else{if(s.row<A.lines.length){const e=A.lines[s.row];C[s.row].style.width=Math.max(1,e.length-s.col)+"ch",C[s.row].style.visibility="visible"}if(r.row<A.lines.length){const e=A.lines[r.row];r.col>=e.length&&console.warn(`secondEdge's column ${r.col} is too far beyond the text with length: `,e.length),C[r.row].style.width=Math.min(r.col+1,e.length)+"ch",C[r.row].style.visibility="visible"}}return m.innerHTML=`Spaces: ${l}`,f.innerHTML=`Ln ${A.start+L.row+1}, Col ${$.col+1}`,this}this.Viewport=A,this.Model=T,this.Selection=z,D(!0),e.addEventListener("paste",e=>{e.preventDefault();const t=e.clipboardData.getData("text/plain");t&&z.insertLines(t.split("\n"))}),e.addEventListener("copy",e=>{e.preventDefault(),e.clipboardData.setData("text/plain",z.lines.join("\n"))}),e.addEventListener("keydown",e=>{if(!e.metaKey&&!e.ctrlKey||"v"!==e.key.toLowerCase())return(e.metaKey||e.ctrlKey)&&"c"===e.key.toLowerCase()?(k.focus({preventScroll:!0}),void k.select()):void(e.key.startsWith("Arrow")?(e.preventDefault(),e.metaKey?(!e.shiftKey&&z.isSelection&&z.makeCursor(),e.shiftKey&&!z.isSelection&&z.makeSelection(),"ArrowLeft"===e.key?z.moveCursorStartOfLine():"ArrowRight"===e.key&&z.moveCursorEndOfLine()):e.altKey?(!e.shiftKey&&z.isSelection&&z.makeCursor(),e.shiftKey&&!z.isSelection&&z.makeSelection(),"ArrowLeft"===e.key?z.moveBackWord():"ArrowRight"===e.key&&z.moveWord()):!e.shiftKey&&z.isSelection?"ArrowLeft"===e.key?(z.setCursor(z.ordered[0]),D(!0)):"ArrowRight"===e.key?(z.setCursor(z.ordered[1]),D(!0)):"ArrowUp"===e.key?(z.setCursor(z.ordered[0]),z.moveRow(-1)):"ArrowDown"===e.key&&(z.setCursor(z.ordered[1]),z.moveRow(1)):(e.shiftKey&&!z.isSelection&&z.makeSelection(),"ArrowDown"===e.key?z.moveRow(1):"ArrowUp"===e.key?z.moveRow(-1):"ArrowLeft"===e.key?z.moveCol(-1):"ArrowRight"===e.key&&z.moveCol(1))):"Backspace"===e.key?z.delete():"Enter"===e.key?z.newLine():"Escape"===e.key||("Tab"===e.key?(e.preventDefault(),z.isSelection?e.shiftKey?z.unindent():z.indent():e.shiftKey?z.unindent():z.insert(" ".repeat(l))):e.key.length>1?console.warn("Ignoring unknown key: ",e.code,e.key):"Shift"===e.key||(" "===e.key?(e.preventDefault(),z.insert(" ")):z.insert(e.key))))})}function $clamp(e,t,n){return e<t?(console.warn("Out of bounds"),t):e>n?(console.warn("Out of bounds"),n):e}